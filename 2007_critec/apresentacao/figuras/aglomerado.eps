%!PS-Adobe-2.0 EPSF-2.0
%%Title: aglomerado.fig
%%Creator: fig2dev Version 3.2 Patchlevel 5-alpha5
%%CreationDate: Mon Mar 28 19:00:48 2005
%%For: kurumin@gauderio (kurumin)
%%BoundingBox: 0 0 357 222
%Magnification: 1.0000
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 222 moveto 0 0 lineto 357 0 lineto 357 222 lineto closepath clip newpath
-183.5 291.8 translate
1 -1 scale

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index oldshow	% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proc char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% crosshatch45
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 20 20 true [ 20 0 0 -20 0 20 ]
	{<8020004050102088201104400a02800401000a02
	8011044020882040501080200040501020882011
	04400a02800401000a0280110440208820405010>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P6 exch def

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/reencdict 12 dict def /ReEncode { reencdict begin
/newcodesandnames exch def /newfontname exch def /basefontname exch def
/basefontdict basefontname findfont def /newfont basefontdict maxlength dict def
basefontdict { exch dup /FID ne { dup /Encoding eq
{ exch dup length array copy newfont 3 1 roll put }
{ exch newfont 3 1 roll put } ifelse } { pop pop } ifelse } forall
newfont /FontName newfontname put newcodesandnames aload pop
128 1 255 { newfont /Encoding get exch /.notdef put } for
newcodesandnames length 2 idiv { newfont /Encoding get 3 1 roll put } repeat
newfontname newfont definefont pop end } def
/isovec [
8#055 /minus 8#200 /grave 8#201 /acute 8#202 /circumflex 8#203 /tilde
8#204 /macron 8#205 /breve 8#206 /dotaccent 8#207 /dieresis
8#210 /ring 8#211 /cedilla 8#212 /hungarumlaut 8#213 /ogonek 8#214 /caron
8#220 /dotlessi 8#230 /oe 8#231 /OE
8#240 /space 8#241 /exclamdown 8#242 /cent 8#243 /sterling
8#244 /currency 8#245 /yen 8#246 /brokenbar 8#247 /section 8#250 /dieresis
8#251 /copyright 8#252 /ordfeminine 8#253 /guillemotleft 8#254 /logicalnot
8#255 /hyphen 8#256 /registered 8#257 /macron 8#260 /degree 8#261 /plusminus
8#262 /twosuperior 8#263 /threesuperior 8#264 /acute 8#265 /mu 8#266 /paragraph
8#267 /periodcentered 8#270 /cedilla 8#271 /onesuperior 8#272 /ordmasculine
8#273 /guillemotright 8#274 /onequarter 8#275 /onehalf
8#276 /threequarters 8#277 /questiondown 8#300 /Agrave 8#301 /Aacute
8#302 /Acircumflex 8#303 /Atilde 8#304 /Adieresis 8#305 /Aring
8#306 /AE 8#307 /Ccedilla 8#310 /Egrave 8#311 /Eacute
8#312 /Ecircumflex 8#313 /Edieresis 8#314 /Igrave 8#315 /Iacute
8#316 /Icircumflex 8#317 /Idieresis 8#320 /Eth 8#321 /Ntilde 8#322 /Ograve
8#323 /Oacute 8#324 /Ocircumflex 8#325 /Otilde 8#326 /Odieresis 8#327 /multiply
8#330 /Oslash 8#331 /Ugrave 8#332 /Uacute 8#333 /Ucircumflex
8#334 /Udieresis 8#335 /Yacute 8#336 /Thorn 8#337 /germandbls 8#340 /agrave
8#341 /aacute 8#342 /acircumflex 8#343 /atilde 8#344 /adieresis 8#345 /aring
8#346 /ae 8#347 /ccedilla 8#350 /egrave 8#351 /eacute
8#352 /ecircumflex 8#353 /edieresis 8#354 /igrave 8#355 /iacute
8#356 /icircumflex 8#357 /idieresis 8#360 /eth 8#361 /ntilde 8#362 /ograve
8#363 /oacute 8#364 /ocircumflex 8#365 /otilde 8#366 /odieresis 8#367 /divide
8#370 /oslash 8#371 /ugrave 8#372 /uacute 8#373 /ucircumflex
8#374 /udieresis 8#375 /yacute 8#376 /thorn 8#377 /ydieresis] def
/Helvetica-Bold /Helvetica-Bold-iso isovec ReEncode
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06299 0.06299 sc
%
% Fig objects follow
%
% 
% here starts figure with depth 500
% Polyline
0 slj
0 slc
7.500 slw
n 4380 2160 m 4275 2160 4275 3720 105 arcto 4 {pop} repeat
  4275 3825 4710 3825 105 arcto 4 {pop} repeat
  4815 3825 4815 2265 105 arcto 4 {pop} repeat
  4815 2160 4380 2160 105 arcto 4 {pop} repeat
 cp gs col6 1.00 shd ef gr gs col0 s gr 
% Polyline
n 5010 2160 m 4905 2160 4905 3720 105 arcto 4 {pop} repeat
  4905 3825 5340 3825 105 arcto 4 {pop} repeat
  5445 3825 5445 2265 105 arcto 4 {pop} repeat
  5445 2160 5010 2160 105 arcto 4 {pop} repeat
 cp gs col6 1.00 shd ef gr gs col0 s gr 
% Polyline
n 3750 2160 m 3645 2160 3645 3720 105 arcto 4 {pop} repeat
  3645 3825 4080 3825 105 arcto 4 {pop} repeat
  4185 3825 4185 2265 105 arcto 4 {pop} repeat
  4185 2160 3750 2160 105 arcto 4 {pop} repeat
 cp gs col6 1.00 shd ef gr gs col0 s gr 
% Polyline
n 6315 2160 m 6210 2160 6210 3720 105 arcto 4 {pop} repeat
  6210 3825 6645 3825 105 arcto 4 {pop} repeat
  6750 3825 6750 2265 105 arcto 4 {pop} repeat
  6750 2160 6315 2160 105 arcto 4 {pop} repeat
 cp gs col6 1.00 shd ef gr gs col0 s gr 
% Polyline
n 3075 2160 m 2970 2160 2970 3720 105 arcto 4 {pop} repeat
  2970 3825 3405 3825 105 arcto 4 {pop} repeat
  3510 3825 3510 2265 105 arcto 4 {pop} repeat
  3510 2160 3075 2160 105 arcto 4 {pop} repeat
 cp gs col6 1.00 shd ef gr gs col0 s gr 
% here ends figure;
% 
% here starts figure with depth 50
% Ellipse
7.500 slw
n 5715 2880 45 45 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 5850 2880 45 45 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 5985 2880 45 45 0 360 DrawEllipse gs col0 s gr

% Polyline
0 slj
0 slc
n 3060 3195 m 3420 3195 l 3420 3555 l 3060 3555 l
 cp gs col1 1.00 shd ef gr gs col0 s gr 
% Polyline
gs  clippath
3210 3043 m 3210 3210 l 3270 3210 l 3270 3043 l 3270 3043 l 3240 3163 l 3210 3043 l cp
3270 2987 m 3270 2820 l 3210 2820 l 3210 2987 l 3210 2987 l 3240 2867 l 3270 2987 l cp
eoclip
n 3240 2835 m
 3240 3195 l gs col0 s gr gr

% arrowhead
n 3270 2987 m 3240 2867 l 3210 2987 l 3270 2987 l  cp gs 0.00 setgray ef gr  col0 s
% arrowhead
n 3210 3043 m 3240 3163 l 3270 3043 l 3210 3043 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
15.000 slw
gs  clippath
4515 2323 m 4515 2490 l 4575 2490 l 4575 2323 l 4575 2323 l 4545 2443 l 4515 2323 l cp
4575 1907 m 4575 1740 l 4515 1740 l 4515 1907 l 4515 1907 l 4545 1787 l 4575 1907 l cp
eoclip
n 4545 1755 m
 4545 2475 l gs col-1 s gr gr

% arrowhead
7.500 slw
n 4575 1907 m 4545 1787 l 4515 1907 l 4575 1907 l  cp gs 0.00 setgray ef gr  col-1 s
% arrowhead
n 4515 2323 m 4545 2443 l 4575 2323 l 4515 2323 l  cp gs 0.00 setgray ef gr  col-1 s
% Polyline
n 4365 2475 m 4725 2475 l 4725 2835 l 4365 2835 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P6 [16 0 0 -16 291.00 165.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 4365 3195 m 4725 3195 l 4725 3555 l 4365 3555 l
 cp gs col1 1.00 shd ef gr gs col0 s gr 
% Polyline
gs  clippath
4515 3043 m 4515 3210 l 4575 3210 l 4575 3043 l 4575 3043 l 4545 3163 l 4515 3043 l cp
4575 2987 m 4575 2820 l 4515 2820 l 4515 2987 l 4515 2987 l 4545 2867 l 4575 2987 l cp
eoclip
n 4545 2835 m
 4545 3195 l gs col0 s gr gr

% arrowhead
n 4575 2987 m 4545 2867 l 4515 2987 l 4575 2987 l  cp gs 0.00 setgray ef gr  col0 s
% arrowhead
n 4515 3043 m 4545 3163 l 4575 3043 l 4515 3043 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
15.000 slw
gs  clippath
5145 2323 m 5145 2490 l 5205 2490 l 5205 2323 l 5205 2323 l 5175 2443 l 5145 2323 l cp
5205 1907 m 5205 1740 l 5145 1740 l 5145 1907 l 5145 1907 l 5175 1787 l 5205 1907 l cp
eoclip
n 5175 1755 m
 5175 2475 l gs col0 s gr gr

% arrowhead
7.500 slw
n 5205 1907 m 5175 1787 l 5145 1907 l 5205 1907 l  cp gs 0.00 setgray ef gr  col0 s
% arrowhead
n 5145 2323 m 5175 2443 l 5205 2323 l 5145 2323 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
n 4995 2475 m 5355 2475 l 5355 2835 l 4995 2835 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P6 [16 0 0 -16 333.00 165.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 4995 3195 m 5355 3195 l 5355 3555 l 4995 3555 l
 cp gs col1 1.00 shd ef gr gs col0 s gr 
% Polyline
gs  clippath
5145 3043 m 5145 3210 l 5205 3210 l 5205 3043 l 5205 3043 l 5175 3163 l 5145 3043 l cp
5205 2987 m 5205 2820 l 5145 2820 l 5145 2987 l 5145 2987 l 5175 2867 l 5205 2987 l cp
eoclip
n 5175 2835 m
 5175 3195 l gs col0 s gr gr

% arrowhead
n 5205 2987 m 5175 2867 l 5145 2987 l 5205 2987 l  cp gs 0.00 setgray ef gr  col0 s
% arrowhead
n 5145 3043 m 5175 3163 l 5205 3043 l 5145 3043 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
15.000 slw
gs  clippath
3885 2323 m 3885 2490 l 3945 2490 l 3945 2323 l 3945 2323 l 3915 2443 l 3885 2323 l cp
3945 1907 m 3945 1740 l 3885 1740 l 3885 1907 l 3885 1907 l 3915 1787 l 3945 1907 l cp
eoclip
n 3915 1755 m
 3915 2475 l gs col0 s gr gr

% arrowhead
7.500 slw
n 3945 1907 m 3915 1787 l 3885 1907 l 3945 1907 l  cp gs 0.00 setgray ef gr  col0 s
% arrowhead
n 3885 2323 m 3915 2443 l 3945 2323 l 3885 2323 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
n 3735 2475 m 4095 2475 l 4095 2835 l 3735 2835 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P6 [16 0 0 -16 249.00 165.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 3735 3195 m 4095 3195 l 4095 3555 l 3735 3555 l
 cp gs col1 1.00 shd ef gr gs col0 s gr 
% Polyline
gs  clippath
3885 3043 m 3885 3210 l 3945 3210 l 3945 3043 l 3945 3043 l 3915 3163 l 3885 3043 l cp
3945 2987 m 3945 2820 l 3885 2820 l 3885 2987 l 3885 2987 l 3915 2867 l 3945 2987 l cp
eoclip
n 3915 2835 m
 3915 3195 l gs col0 s gr gr

% arrowhead
n 3945 2987 m 3915 2867 l 3885 2987 l 3945 2987 l  cp gs 0.00 setgray ef gr  col0 s
% arrowhead
n 3885 3043 m 3915 3163 l 3945 3043 l 3885 3043 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
15.000 slw
gs  clippath
6450 2323 m 6450 2490 l 6510 2490 l 6510 2323 l 6510 2323 l 6480 2443 l 6450 2323 l cp
6510 1907 m 6510 1740 l 6450 1740 l 6450 1907 l 6450 1907 l 6480 1787 l 6510 1907 l cp
eoclip
n 6480 1755 m
 6480 2475 l gs col0 s gr gr

% arrowhead
7.500 slw
n 6510 1907 m 6480 1787 l 6450 1907 l 6510 1907 l  cp gs 0.00 setgray ef gr  col0 s
% arrowhead
n 6450 2323 m 6480 2443 l 6510 2323 l 6450 2323 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
n 6300 2475 m 6660 2475 l 6660 2835 l 6300 2835 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P6 [16 0 0 -16 420.00 165.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 6300 3195 m 6660 3195 l 6660 3555 l 6300 3555 l
 cp gs col1 1.00 shd ef gr gs col0 s gr 
% Polyline
gs  clippath
6450 3043 m 6450 3210 l 6510 3210 l 6510 3043 l 6510 3043 l 6480 3163 l 6450 3043 l cp
6510 2987 m 6510 2820 l 6450 2820 l 6450 2987 l 6450 2987 l 6480 2867 l 6510 2987 l cp
eoclip
n 6480 2835 m
 6480 3195 l gs col0 s gr gr

% arrowhead
n 6510 2987 m 6480 2867 l 6450 2987 l 6510 2987 l  cp gs 0.00 setgray ef gr  col0 s
% arrowhead
n 6450 3043 m 6480 3163 l 6510 3043 l 6450 3043 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
n 3060 2475 m 3420 2475 l 3420 2835 l 3060 2835 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P6 [16 0 0 -16 204.00 165.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 2970 1125 m 6750 1125 l 6750 1755 l 2970 1755 l
 cp gs col4 1.00 shd ef gr gs col0 s gr 
% Polyline
15.000 slw
gs  clippath
3210 2323 m 3210 2490 l 3270 2490 l 3270 2323 l 3270 2323 l 3240 2443 l 3210 2323 l cp
3270 1907 m 3270 1740 l 3210 1740 l 3210 1907 l 3210 1907 l 3240 1787 l 3270 1907 l cp
eoclip
n 3240 1755 m
 3240 2475 l gs col0 s gr gr

% arrowhead
7.500 slw
n 3270 1907 m 3240 1787 l 3210 1907 l 3270 1907 l  cp gs 0.00 setgray ef gr  col0 s
% arrowhead
n 3210 2323 m 3240 2443 l 3270 2323 l 3210 2323 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
2 slj
n 2925 3960 m 2925 3961 l 2927 3963 l 2929 3967 l 2933 3972 l 2938 3979 l
 2946 3988 l 2955 3996 l 2966 4006 l 2979 4015 l 2994 4024 l
 3011 4032 l 3029 4039 l 3050 4046 l 3074 4052 l 3100 4057 l
 3129 4062 l 3162 4066 l 3199 4069 l 3240 4073 l 3266 4074 l
 3294 4076 l 3323 4078 l 3354 4079 l 3386 4081 l 3420 4082 l
 3455 4083 l 3492 4085 l 3530 4086 l 3570 4087 l 3611 4089 l
 3652 4090 l 3695 4091 l 3738 4092 l 3782 4094 l 3826 4095 l
 3871 4096 l 3916 4097 l 3960 4099 l 4004 4100 l 4048 4101 l
 4090 4103 l 4132 4104 l 4173 4106 l 4213 4107 l 4251 4109 l
 4289 4111 l 4324 4112 l 4359 4114 l 4391 4116 l 4423 4118 l
 4452 4120 l 4481 4123 l 4508 4125 l 4554 4130 l 4597 4135 l
 4635 4141 l 4670 4147 l 4702 4154 l 4730 4160 l 4755 4167 l
 4776 4174 l 4795 4181 l 4810 4187 l 4823 4193 l 4833 4199 l
 4841 4204 l 4847 4208 l 4852 4211 l 4855 4213 l 4858 4215 l
 4860 4215 l 4862 4215 l 4865 4213 l 4868 4211 l 4873 4208 l
 4879 4204 l 4887 4199 l 4897 4193 l 4909 4187 l 4924 4181 l
 4942 4174 l 4963 4167 l 4988 4160 l 5015 4154 l 5046 4147 l
 5080 4141 l 5118 4135 l 5159 4130 l 5205 4125 l 5231 4123 l
 5259 4120 l 5288 4118 l 5318 4116 l 5350 4114 l 5384 4112 l
 5419 4111 l 5455 4109 l 5493 4107 l 5531 4106 l 5571 4104 l
 5612 4102 l 5654 4101 l 5697 4099 l 5740 4098 l 5783 4096 l
 5826 4095 l 5870 4094 l 5913 4092 l 5956 4091 l 5998 4089 l
 6040 4088 l 6081 4086 l 6120 4084 l 6159 4083 l 6196 4081 l
 6232 4079 l 6267 4078 l 6300 4076 l 6331 4074 l 6361 4072 l
 6390 4070 l 6417 4067 l 6443 4065 l 6479 4061 l 6513 4057 l
 6542 4052 l 6569 4047 l 6594 4041 l 6616 4034 l 6635 4026 l
 6653 4018 l 6669 4009 l 6684 3999 l 6697 3988 l 6709 3977 l
 6719 3966 l 6727 3955 l 6735 3945 l 6740 3935 l 6744 3928 l
 6747 3922 l 6749 3918 l 6750 3916 l
 6750 3915 l gs col0 s gr 
/Helvetica-Bold-iso ff 222.25 scf sf
6930 3510 m
gs 1 -1 sc (Mem\363ria ) col0 sh gr
/Helvetica-Bold-iso ff 222.25 scf sf
6930 2745 m
gs 1 -1 sc (Processador) col0 sh gr
/Helvetica-Bold-iso ff 222.25 scf sf
6930 2025 m
gs 1 -1 sc (Mensagens) col0 sh gr
/Helvetica-Bold-iso ff 222.25 scf sf
8010 3510 m
gs 1 -1 sc (local) col0 sh gr
/Helvetica-Bold-iso ff 222.25 scf sf
4050 4545 m
gs 1 -1 sc (Computadores) col0 sh gr
/Helvetica-Bold-iso ff 222.25 scf sf
3600 1530 m
gs 1 -1 sc (Rede de interconex\343o) col7 sh gr
% here ends figure;
$F2psEnd
rs
end
showpage
%%Trailer
%EOF
